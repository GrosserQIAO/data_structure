a: 计算：
   * 计算机的本质是什么？
       计算
       是计算机的对象：规律、技巧
       是计算机的目标：高效、低耗
   * 什么是计算过程？
       借助某种工具，遵照一定规则，以明确而机械的形式进行的过程。计算=信息处理
   * 计算模型=计算机=信息处理工具
   * 什么是算法？
       特定计算模型下，旨在解决特定问题的指令序列
         有输入：待处理信息（问题）
         有输出：经处理的信息（答案）
         正确性：的确可以解决某一特定问题
         确定性：任何一算法都有一个基本操作组成的序列
         可行性：
         有穷性：有限步之后得出结果。 # halistone序列，故程序并非算法
   * 什么是一个好算法？
        效率是第一准则，速度快，存储空间少
        (Algorithms + Data structures) x efficiency=Computation
        
b: 计算模型：   
   * 对算法的mesure很重要
   * 算法分析的两方面：1. 正确性；2. 成本->运行时间＋所需空间
   * 一般一个算法与实例的“规模”有关，例如可以以段，字节等来计算其规模
   * 同一种算法如何评判优劣？
       1. 实验统计，难以让人信服
       2. 需要抽象出一个理想的模型和算法
d: 算法分析：
    * 算法分析任务：
       正确性（不变性+单调性）
       复杂度
    * 方法：
       迭代：级数求和 
          算数级数：O(n^(d+1))
          几何级数：O（a^n）
          一天：10^5s
          一个世纪：3x10^9s
          三生三世：10^10s
          宇宙大爆炸至今：10^21s
       递归：递归追踪+递推方程
       猜测+验证：
     
 e: 迭代与递归
    # 从效率上讲，递归并不高，而相反的，看似复杂的迭代更加高效
    * 递归跟踪分析：检查每个递归实例，计算时间
    * 递推方程分析：列出递推方程，计算时间
        
       
